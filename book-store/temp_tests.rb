[1, 1, 2, 2, 3, 3, 4, 5]

=> [1,2,3], [1,2,3,4,5]
=> [1,2,3,4], [1,2,3,5]

[1,2,3] [1,2,3]
[4,5]

[4] [5]
[4,5] []

[1] [1] [1] | [1] [1] [1] | [1] [1] [1] |
[2] [2] [ ] | [2] [ ] [2] | [ ] [2] [2] |
[3] [3] [ ] | [3] [3] [ ] | [3] [3] [ ] |
[4] [ ] [ ] | [4] [ ] [ ] | [4] [ ] [ ] |
[5] [ ] [ ] | [5] [ ] [ ] | [5] [ ] [ ] |

a = [1,1,1]
result = [2,2,nil].
  permutation(3).
  to_a.
  uniq.
  map do |permutation|
    a.zip permutation
  end
result.map do |combinations|
  Set.new combinations
end.uniq

array = [
  [2,2,nil],
]

array.reduce([]) do |result, possibilities|
  result = if result.empty?
    possibilities
  else
    possibilities.permutation(3).to_a.uniq
      .map { |permutation| result.zip permutation }
  end

  result
end


a = [4,5]
(1..a.size).each_with_object([]) do |number, array|
  array << a.combination(number).to_a
end



[1, 1, 2, 3, 4, 4, 5, 5]

=> [1,4,5] [1,2,3,4,5]
=> [1,3,4,5] [1,2,4,5]

[1, 1, 2, 2, 3, 4]

=> [1,2] [1,2,3,4]
=> [1,2,3] [1,2,4]

[1, 1, 2, 2, 3, 3, 4, 4, 5]

=> [1,2,3,4] [1,2,3,4,5]

[1, 1, 2, 2, 3, 3, 4, 4, 5, 5]

=> [1,2,3,4,5] [1,2,3,4,5]


[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 1]

=> [1] [1,2,3,4,5,] [1,2,3,4,5]

[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 1, 2]

[1,2] [1,2,3,4,5,] [1,2,3,4,5]


[1, 1, 2, 2, 3, 3, 4, 5, 1, 1, 2, 2, 3, 3, 4, 5]

base: [1,2,3] [1,2,3] [1,2,3] [1,2,3]
=> [1,2,3] [1,2,3] [1,2,3,4,5] [1,2,3,4,5] # 103.2
=> [1,2,3] [1,2,3,4] [1,2,3,5] [1,2,3,4,5] # 102.8
=> [1,2,3,4] [1,2,3,4] [1,2,3,5] [1,2,3,4] # 102.4
